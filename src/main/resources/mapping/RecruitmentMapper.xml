<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.charley.mapper.RecruitmentMapper" >
  <resultMap id="BaseResultMap" type="org.charley.model.Recruitment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="workability" property="workability" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="experience" property="experience" jdbcType="VARCHAR" />
    <result column="pulish_user" property="pulishUser" jdbcType="VARCHAR" />
    <result column="pulish_time" property="pulishTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, dept_id, workability, sex, education, age, address, experience, pulish_user, 
    pulish_time, description, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectAllRecruitment" resultMap="BaseResultMap" parameterType="org.charley.model.Recruitment">
    select
    <include refid="Base_Column_List" />
    from recruitment
    WHERE 1=1
    <if test="roleId != null" >
      AND role_id = #{roleId,jdbcType=INTEGER}
    </if>
    <if test="deptId != null" >
      AND dept_id = #{deptId,jdbcType=VARCHAR}
    </if>
    ORDER BY id DESC
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from recruitment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from recruitment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.charley.model.Recruitment" >
    insert into recruitment (id, role_id, dept_id, 
      workability, sex, education, 
      age, address, experience, 
      pulish_user, pulish_time, description, 
      create_user, create_time, update_user, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{workability,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{experience,jdbcType=VARCHAR}, 
      #{pulishUser,jdbcType=VARCHAR}, #{pulishTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.charley.model.Recruitment" >
    insert into recruitment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="workability != null" >
        workability,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="experience != null" >
        experience,
      </if>
      <if test="pulishUser != null" >
        pulish_user,
      </if>
      <if test="pulishTime != null" >
        pulish_time,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="workability != null" >
        #{workability,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="pulishUser != null" >
        #{pulishUser,jdbcType=VARCHAR},
      </if>
      <if test="pulishTime != null" >
        #{pulishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.charley.model.Recruitment" >
    update recruitment
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="workability != null" >
        workability = #{workability,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="pulishUser != null" >
        pulish_user = #{pulishUser,jdbcType=VARCHAR},
      </if>
      <if test="pulishTime != null" >
        pulish_time = #{pulishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.charley.model.Recruitment" >
    update recruitment
    set role_id = #{roleId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      workability = #{workability,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      pulish_user = #{pulishUser,jdbcType=VARCHAR},
      pulish_time = #{pulishTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>